"""
Django settings for mywifipass project.

Generated by 'django-admin startproject' using Django 5.1.7.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""
from pathlib import Path
from decouple import Config, RepositoryEnv
from django.core.management.utils import get_random_secret_key
import os 

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django_x509',
    'rest_framework',
    'rest_framework.authtoken',
    'drf_yasg',
    'mywifipass',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.middleware.locale.LocaleMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
]

ROOT_URLCONF = 'mywifipass.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / "mywifipass" / "templates"],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'mywifipass.wsgi.application'


REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework.authentication.TokenAuthentication',  
    ],
}

# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': os.getenv('DB_NAME', default="mywifipass"),
        'USER': os.getenv('DB_USER', default="postgres"),
        'PASSWORD': os.getenv('DB_PASS', default="postgres_pass"),
        'HOST': os.getenv('DB_HOST', default="localhost"),
        'PORT': "5432",
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = os.environ.get('TZ', default='UTC')

USE_I18N = False
USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = BASE_DIR / "staticfiles" 
STATICFILES_DIRS = [BASE_DIR / "mywifipass" / "static"]  
MEDIA_URL = '/logos/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'logos')

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


# Email settings
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = os.getenv('EMAIL_HOST', default="smtp.gmail.com")
EMAIL_PORT = os.getenv('EMAIL_HOST_PORT', default=587)
EMAIL_USE_TLS =  os.getenv('EMAIL_USE_TLS', default=True)
EMAIL_HOST_USER = os.getenv('EMAIL_HOST_USER')
EMAIL_HOST_PASSWORD = os.getenv('EMAIL_HOST_PASSWORD') 
DEFAULT_FROM_EMAIL = EMAIL_HOST_USER

# MyWifiPass specific defaults (configurable via environment)
# URL to the app listing in Google Play (used in registration emails)
MYWIFIPASS_PLAYSTORE_URL = os.getenv('MYWIFIPASS_PLAYSTORE_URL', 'https://play.google.com/store/apps/details?id=app.mywifipass')
# Display name for the From header in outbound emails (e.g. "MyWifiPass")
MYWIFIPASS_FROM_NAME = os.getenv('MYWIFIPASS_FROM_NAME', 'MyWifiPass')

# URL configuration 
DOMAIN = os.getenv('DOMAIN', default="localhost:8000")
USER_PATH = "user/" 
API_PATH = "api/"

# SECURITY WARNING: keep the secret key used in production secret!
# If the secret key is defined we use it, if not we generate a new one and add it to the .env file
secret_path = os.path.join(BASE_DIR, "secrets/.env")
config = Config(RepositoryEnv(secret_path))
try:
    secret_key = config("DJANGO_SECRET_KEY")
except:
    secret = get_random_secret_key()
    with open("/djangox509/mywifipass/secrets/.env", "w") as f:
        f.write(f"\n{"DJANGO_SECRET_KEY"}='{secret}'")
    secret_key = secret

SECRET_KEY = secret_key

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = os.getenv('DEBUG', default=False).lower () in ('true', '1', 'yes')

ALLOWED_HOSTS = ["0.0.0.0", "*"]

ssl = os.getenv('SSL', default='False').lower() in ('true', '1', 'yes')

if ssl:
    SESSION_COOKIE_SECURE = True
    CSRF_COOKIE_SECURE = True
    SECURE_SSL_REDIRECT = True
    http_header = "https://"
else: 
    http_header = "http://"

# Configure the base URL for the application
BASE_URL = f"{http_header}{DOMAIN}/"

# Configure the usage of a reverse proxy
SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')
EMAIL_TIMEOUT = 5 